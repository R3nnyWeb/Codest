{
    "drivers": {
        "JAVA": "import java.util.*;\nimport java.time.*;\nimport java.math.*;\nimport java.io.*;\n\n{{solution}}\n        \n        public class Driver{\n            private static final Scanner scanner = new Scanner(System.in);\n            \n            public static void main(String[] args) {\n                for(int i = 0; i < {{testsCount}}; i++) {\n                    {{paramsInputSection}}\n                    {{returnType}} result = new Solution().{{methodName}}({{paramsList}});\n                    \n                    printResult(result);\n                }\n                scanner.close();\n            }\n    public static void printResult(Object obj) {\n        if (obj == null) {\n            System.out.println(\"null\");\n        } else if (obj.getClass().isArray()) {\n            if (obj instanceof int[]) {\n                System.out.println(Arrays.toString((int[]) obj));\n            } else if (obj instanceof short[]) {\n                System.out.println(Arrays.toString((short[]) obj));\n            } else if (obj instanceof long[]) {\n                System.out.println(Arrays.toString((long[]) obj));\n            } else if (obj instanceof double[]) {\n                System.out.println(Arrays.toString((double[]) obj));\n            } else if (obj instanceof float[]) {\n                System.out.println(Arrays.toString((float[]) obj));\n            } else if (obj instanceof boolean[]) {\n                System.out.println(Arrays.toString((boolean[]) obj));\n            } else if (obj instanceof char[]) {\n                System.out.println(Arrays.toString((char[]) obj));\n            } else {\n                System.out.println(Arrays.toString((Object[]) obj));\n            }\n        } else {\n            System.out.println(obj.toString());\n        }\n    }\n\n\n    {{readMethods}}\n}",
        "PYTHON": "import time\nimport psutil\nfrom typing import List\n\n{{solution}}\n\n{{readMethods}}\n\nif __name__ == '__main__':\n    for i in range({{testsCount}}):\n{{paramsInputSection}}\n        s = Solution()\n        ret = Solution.{{methodName}}(s, {{paramsList}})\n        print(ret)"
    },
    "typeLanguageMapping": {
        "INTEGER": {
            "readMethod": "READ_INTEGER",
            "typeConfig": {
                "JAVA": {
                    "read": "private static int READ_INTEGER() {\n  int input = scanner.nextInt();\n  scanner.nextLine();\n  return input;\n}",
                    "typeName": "int"
                },
                "PYTHON": {
                    "read": "def READ_INTEGER():\n    return int(input())",
                    "typeName": "int"
                }
            }
        },
        "STRING": {
            "readMethod": "READ_STRING",
            "typeConfig": {
                "JAVA": {
                    "read": "private static String READ_STRING() {\n  String input = scanner.nextLine();\n \n  return input;\n}",
                    "typeName": "String"
                },
                "PYTHON": {
                    "read": "def READ_STRING():\n    return input()",
                    "typeName": "str"
                }
            }
        },
        "INTEGER_ARR": {
            "readMethod": "READ_INTEGER_ARR",
            "typeConfig": {
                "JAVA": {
                    "read": "    private static int[] READ_INTEGER_ARR() {\r\n        String input = scanner.nextLine();\r\n        if (input.equals(\"[]\")) {\r\n         return new int[0];\r\n         }\r\n\r\n        input = input.replace(\"[\", \"\").replace(\"]\", \"\").replace(\" \", \"\");\r\n\r\n        String[] elements = input.split(\",\");\r\n\r\n        int[] arr = new int[elements.length];\r\n        for (int i = 0; i < elements.length; i++) {\r\n            arr[i] = Integer.parseInt(elements[i]);\r\n        }\r\n\r\n        return arr;\r\n    }",
                    "typeName": "int[]"
                },
                "PYTHON": {
                    "read": "def READ_INTEGER_ARR():\r\n    input_str = input()\r\n    if input_str == \"[]\":\r\n        return []\r\n\r\n    input_str = input_str.replace(\"[\", \"\").replace(\"]\", \"\").replace(\" \", \"\")\r\n\r\n    elements = input_str.split(\",\")\r\n\r\n    arr = [int(element) for element in elements]\r\n    return arr\r\n",
                    "typeName": "List[int]"
                }
            }
        }
    }
}