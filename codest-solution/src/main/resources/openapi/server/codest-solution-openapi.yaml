openapi: 3.0.3

info:
  title: codest-solution
  description: |-
    API для предоставления решений
  version: 1.0.0
externalDocs:
  description: GitHub
  url: https://github.com/R3nnyWeb/Codest

servers:
  - url: /

tags:
  - name: solution
    description: Решения


paths:
  /v1/solutions/{solutionId}:
    get:
      operationId: getSolution
      summary: Возвращает решение
      description: Возвращает решение
      tags:
        - solution
      parameters:
        - $ref: '#/components/parameters/SolutionIdPath'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Решение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResponse'
        '400':
          $ref: '#/components/responses/Error'
        '422':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'

  /v1/solutions/task/{taskId}:
    get:
      operationId: getSolutionsByTaskId
      summary: Возвращает решения задачи для пользователя
      description: Возвращает решения задачи
      tags:
        - solution
      parameters:
        - $ref: '#/components/parameters/TaskIdPath'
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Решения задачи
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SolutionLiteResponse'
        '400':
          $ref: '#/components/responses/Error'
        '422':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'

    post:
      operationId: createSolution
      summary: Сохраняет решение
      description: Сохраняет решение
      tags:
        - solution
      parameters:
        - $ref: '#/components/parameters/TaskIdPath'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        description: Решение
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolutionRequest'
      responses:
        '200':
          description: Решение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResponse'
        '400':
          $ref: '#/components/responses/Error'
        '422':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'

components:
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    CreateSolutionRequest:
      description: Создание решения
      type: object
      required:
        - code
        - language
      properties:
        code:
          $ref: '#/components/schemas/SolutionCode'
        language:
          $ref: '#/components/schemas/SolutionLanguage'

    SolutionLiteResponse:
      description: Решение (сокращенное)
      type: object
      required:
        - id
        - status
        - createdAt
        - language
      properties:
        id:
          $ref: '#/components/schemas/SolutionId'
        status:
          $ref: '#/components/schemas/SolutionStatus'
        createdAt:
          $ref: '#/components/schemas/SolutionCreatedAt'
        language:
          $ref: '#/components/schemas/SolutionLanguage'

    SolutionResponse:
      description: Решение
      type: object
      required:
        - id
        - status
        - code
        - language
        - createdAt
      properties:
        id:
          $ref: '#/components/schemas/SolutionId'
        status:
          $ref: '#/components/schemas/SolutionStatus'
        code:
          $ref: '#/components/schemas/SolutionCode'
        language:
          $ref: '#/components/schemas/SolutionLanguage'
        createdAt:
          $ref: '#/components/schemas/SolutionCreatedAt'
        error:
          $ref: '#/components/schemas/SolutionError'

    SolutionId:
      description: Уникальный идентификатор решения
      type: string
      format: uuid
      example: 803f29aa-cca4-4fe7-8254-e0005106cdc3

    SolutionStatus:
      description: Статус решения
      type: string
      enum: ['pending', 'accepted', 'runtime_error', 'compile_error', 'test_error', 'timeout_error']

    SolutionCode:
      description: Код решения
      type: string

    SolutionLanguage:
      description: Язык решения
      type: string

    SolutionCreatedAt:
      description: Дата создания решения
      type: string
      format: date-time

    SolutionError:
      description: Описание ошибки
      type: string

    TaskId:
      description: Уникальный идентификатор задачи
      type: string
      format: uuid
      example: 803f29aa-cca4-4fe7-8254-e0005106cdc3

    ErrorResponse:
      description: Данные об ошибке
      type: object
      required:
        - errorCode
        - errorMessage
      properties:
        errorMessage:
          description: Пользовательское сообщение об ошибке
          type: string
          minLength: 1
          example: Сервис временно недоступен
        errorCode:
          description: Код ошибки
          type: string
          example: InternalError
  
  parameters:
    TaskIdPath:
      description: Id задачи
      required: true
      name: taskId
      in: path
      schema:
        $ref: '#/components/schemas/TaskId'

    SolutionIdPath:
      description: Id решения
      required: true
      name: solutionId
      in: path
      schema:
        $ref: '#/components/schemas/SolutionId'

    UserId:
      name: x-user-id
      in: header
      schema:
        type: string
        format: uuid
        example: 803f29aa-cca4-4fe7-8254-e0005106cdc3
      required: true


  