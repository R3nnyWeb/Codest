openapi: 3.0.3

info:
  title: codest-api
  description: |-
    Сервис для предоставляения ифнормации о задачах и их решения
  version: 1.0.0
externalDocs:
  description: GitHUb
  url: https://github.com/R3nnyWeb/Codest

servers:
  - url: /

tags:
  - name: tasks
    description: Задачи
  - name: solution
    description: Решения

paths:

  /v1/tasks/list:
    get:
      tags:
        - tasks
      summary: Список задач с пагинацией
      operationId: getTasksList
      parameters:
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Level'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksListResponse'        
        400:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
  /v1/tasks/{taskId}:
    get:
      tags:
        - tasks
      summary: Полное описание задачи
      operationId: getFullTask
      parameters:
        - $ref: '#/components/parameters/TaskIdPath'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTaskResponse'        
        400:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'
          
  /v1/tasks/{taskId}/lite:
    get:
      tags:
        - tasks
      summary: Короткое описание задачи с решениями пользователя
      operationId: getTaskLite
      parameters:
        - $ref: '#/components/parameters/TaskIdPath'
        - $ref: '#/components/parameters/UserIdOptional'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskLiteResponse'        
        400:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /v1/tasks/:
    post:
      tags:
        - tasks
      summary: Создание задачи
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskResponse'
        400:
          $ref: '#/components/responses/Error'
        422:
          $ref: '#/components/responses/Error'
        500:
          $ref: '#/components/responses/Error'

  /v1/solutions/{solutionId}:
    get:
      operationId: getSolution
      summary: Возвращает решение
      description: Возвращает решение
      tags:
        - solution
      parameters:
        - $ref: '#/components/parameters/SolutionIdPath'
      responses:
        '200':
          description: Решение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResponse'
        '400':
          $ref: '#/components/responses/Error'
        '422':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'

  /v1/solutions/task/{taskId}:
    post:
      operationId: createSolution
      summary: Сохраняет решение
      description: Сохраняет решение
      tags:
        - solution
      parameters:
        - $ref: '#/components/parameters/TaskIdPath'
        - $ref: '#/components/parameters/UserId'
      requestBody:
        description: Решение
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSolutionRequest'
      responses:
        '200':
          description: Решение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SolutionResponse'
        '400':
          $ref: '#/components/responses/Error'
        '422':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'

components:
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    CreateSolutionRequest:
      description: Создание решения
      type: object
      required:
        - code
        - language
      properties:
        code:
          $ref: '#/components/schemas/SolutionCode'
        language:
          $ref: '#/components/schemas/SolutionLanguage'

    SolutionLiteResponse:
      description: Решение (сокращенное)
      type: object
      required:
        - id
        - status
        - createdAt
        - language
      properties:
        id:
          $ref: '#/components/schemas/SolutionId'
        status:
          $ref: '#/components/schemas/SolutionStatus'
        createdAt:
          $ref: '#/components/schemas/SolutionCreatedAt'
        language:
          $ref: '#/components/schemas/SolutionLanguage'

    SolutionResponse:
      description: Решение
      type: object
      required:
        - id
        - status
        - code
        - language
        - createdAt
      properties:
        id:
          $ref: '#/components/schemas/SolutionId'
        status:
          $ref: '#/components/schemas/SolutionStatus'
        code:
          $ref: '#/components/schemas/SolutionCode'
        language:
          $ref: '#/components/schemas/Language'
        createdAt:
          $ref: '#/components/schemas/SolutionCreatedAt'
        error:
          $ref: '#/components/schemas/SolutionError'

    SolutionId:
      description: Уникальный идентификатор решения
      type: string
      format: uuid
      example: 803f29aa-cca4-4fe7-8254-e0005106cdc3

    SolutionStatus:
      description: Статус решения
      type: string
      enum: [ 'pending', 'accepted', 'runtime_error', 'compile_error', 'test_error', 'timeout_error', 'internal_error' ]

    SolutionCode:
      description: Код решения
      type: string

    SolutionLanguage:
      description: Язык решения
      type: string

    SolutionCreatedAt:
      description: Дата создания решения
      type: string
      format: date-time

    SolutionError:
      description: Описание ошибки
      type: array
      items:
        type: string

    CreateTaskResponse:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/TaskId'

    CreateTaskRequest:
      type: object
      required:
        - name
        - description
        - methodName
        - inputTypes
        - outputType
        - level
        - startCodes
        - tests
      properties:
        name:
          $ref: '#/components/schemas/TaskName'
        level:
          $ref: '#/components/schemas/Level'
        description:
          description: Описание
          type: string
          example: lorem ipsum
        inputTypes:
          $ref: '#/components/schemas/TaskInputTypes'
        outputType:
          $ref: '#/components/schemas/TaskOutputType'
        languages:
          $ref: '#/components/schemas/TaskLanguages'
        isEnabled:
          $ref: '#/components/schemas/IsEnabled'
        isPrivate:
          $ref: '#/components/schemas/IsPrivate'
        methodName:
          $ref: '#/components/schemas/MethodName'
        tests:
          $ref: '#/components/schemas/CreateTaskTestsRequest'
        startCodes:
          $ref: '#/components/schemas/TaskStartCodes'

    CreateTaskTestsRequest:
      type: array
      items:
        $ref: '#/components/schemas/CreateTest'

    TaskLiteResponse:
      description: Описание задачи для решения
      type: object
      required:
        - id
        - name
        - level
        - languages
        - description
        - isEnabled
        - isPrivate
        - startCodes
        - solutions
      properties:
        id:
          $ref: '#/components/schemas/TaskId'
        name:
          $ref: '#/components/schemas/TaskName'
        level: 
          $ref: '#/components/schemas/Level'
        description:
          description: Описание
          type: string
          example: lorem ipsum
        languages:
          $ref: '#/components/schemas/TaskLanguages'
        isEnabled:
          $ref: '#/components/schemas/IsEnabled'
        isPrivate:
          $ref: '#/components/schemas/IsPrivate'
        startCodes:
          $ref: '#/components/schemas/TaskStartCodes'
        solutions:
          description: Решения для задачи этого пользователя (по умолчанию пустой)
          type: array
          items:
            $ref: '#/components/schemas/SolutionLiteResponse'
          default: []


    FullTaskResponse:
      description: Полное описание задачи
      type: object
      required:
        - id
        - name
        - level
        - inputTypes
        - outputType
        - languages
        - isEnabled
        - isPrivate
        - methodName
        - tests
        - drivers
        - startCodes
      properties:
        id:
          $ref: '#/components/schemas/TaskId'
        name:
          $ref: '#/components/schemas/TaskName'
        level: 
          $ref: '#/components/schemas/Level'
        description:
          description: Описание
          type: string
          example: lorem ipsum
        inputTypes:
          $ref: '#/components/schemas/TaskInputTypes'
        outputType:
          $ref: '#/components/schemas/TaskOutputType'
        languages:
          $ref: '#/components/schemas/TaskLanguages'
        isEnabled:
          $ref: '#/components/schemas/IsEnabled'
        isPrivate:
          $ref: '#/components/schemas/IsPrivate'
        methodName:
          $ref: '#/components/schemas/MethodName'
        tests:
          $ref: '#/components/schemas/TaskTests'
        drivers:
          $ref: '#/components/schemas/TaskDrivers'
        startCodes:
          $ref: '#/components/schemas/TaskStartCodes'
          
    TaskStartCodes:
      description: Заготовки кода для пользователя. язык -> драйвер
      type: string
      additionalProperties:
        type: string
      example: {'java' : 'someCode'}
      
    TaskDrivers:
      description: Заготовки кода для выполнения. язык -> драйвер
      type: string
      additionalProperties:
        type: string
      example: {'java' : 'someCode'}
      
    TaskInputTypes:
      description: Типы входных параметров
      type: array
      items: 
        type: string
      example: ['integer', 'boolean', 'int_array']
    
    TaskOutputType:
      description: Тип выходного параметра
      type: string
      example: 'integer'
      
    TaskLanguages:
      description: Допустимые языки
      type: array
      items:
        $ref: '#/components/schemas/Language'
      
    Language:
      description: Допустимый язык
      type: string
      example: 'java'
      
    MethodName:
      description: Название реализуемого метода(функции)
      type: string
      example: 'sum'
      
    IsEnabled:
      description: Отображается ли задача в списке (есть доступ по id)
      type: boolean
      
    IsPrivate:
      description: Отображается ли задача только в соревновании (есть доступ по id)
      type: boolean
      
    TaskTests:
      type: array
      items:
        $ref: '#/components/schemas/Test'

    CreateTest:
      description: Тест
      type: object
      required:
        - inputData
        - outputData
      properties:
        inputData:
          $ref: '#/components/schemas/TestInputData'
        outputData:
          $ref: '#/components/schemas/TestOutputData'
      
    Test:
      description: Тест
      type: object
      required:
        - id
        - inputData
        - outputData
      properties:
        id:
          $ref: '#/components/schemas/TestId'
        inputData:
          $ref: '#/components/schemas/TestInputData'
        outputData:
          $ref: '#/components/schemas/TestOutputData'
  
    TestId:
      description: Уникальный идентификатор теста
      type: string
      format: uuid
      example: 803f29aa-cca4-4fe7-8254-e0005106cdc3
      
    TestInputData:
      description: Входные данные теста
      type: array
      items: 
        type: string
      example: ['2', '0', '1']
      
    TestOutputData:
      description: Выходные данные теста
      type: string
      example: '3'
  
    TasksListResponse:
      description: Список задач с пагинацией
      type: object
      required:
        - items
        - currentPage
        - totalPages
      properties:
        currentPage:
          description: Текущая страница
          type: integer
          format: int64
          example: 123
        totalPages:
          description: Всего страниц
          type: integer
          format: int64
          example: 123 
        items:
          type: array
          items:
            $ref: '#/components/schemas/TaskLite'        
    
    TaskLite:
      description: Короткое описание задачи
      type: object
      required:
        - id
        - name
        - level
      properties:
        id:
          $ref: '#/components/schemas/TaskId'
        name:
          $ref: '#/components/schemas/TaskName'
        level:
          $ref: '#/components/schemas/Level'
          
    TaskId:
      description: Уникальный идентификатор задачи
      type: string
      format: uuid
      example: 803f29aa-cca4-4fe7-8254-e0005106cdc3
      
    TaskName:
      description: Имя задачи
      type: string
      example: '1. Сложение'  
    
    Level:
      description: Уровень сложности
      type: string
      enum: ['easy', 'medium', 'hard']
 
    ErrorResponse:
      description: Данные об ошибке
      type: object
      required:
        - errorCode
        - errorMessage
      properties:
        errorMessage:
          description: Пользовательское сообщение об ошибке
          type: string
          minLength: 1
          example: Сервис временно недоступен
        errorCode:
          description: Код ошибки
          type: string
          minLength: 1
          maxLength: 8
          example: 01-Z99
  
  parameters:
    SolutionIdPath:
      description: Id решения
      required: true
      name: solutionId
      in: path
      schema:
        $ref: '#/components/schemas/SolutionId'

    UserId:
      name: x-user-id
      in: header
      schema:
        type: string
        format: uuid
        example: 803f29aa-cca4-4fe7-8254-e0005106cdc3
      required: true

    UserIdOptional:
      name: x-user-id
      in: header
      schema:
        type: string
        format: uuid
        example: 803f29aa-cca4-4fe7-8254-e0005106cdc3
      required: false

    TaskIdPath:
      description: Id задачи
      required: true
      name: taskId
      in: path
      schema:
        $ref: '#/components/schemas/TaskId'

    LanguageQuery:
      description: Язык
      required: true
      name: language
      in: query
      schema:
        $ref: '#/components/schemas/Language'
  
    Level:
      description: Уровень сложности
      required: false
      name: level
      in: query
      schema:
        $ref: '#/components/schemas/Level'
    
    Offset:
      description: Смещение страниц
      required: true
      name: offset
      in: query
      schema:
        type: integer
        format: int64
        minimum: 0
        default: 0
      example: 0

    Limit:
      description: Ограничение "сверху" на количество возвращаемых элементов данных
      name: limit
      in: query
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
      example: 20   
  
  headers:
    XTraceId:
      description: Идентификатор ответа
      schema:
        type: string
        minLength: 1
      required: true
  