version: '3'

networks:
  app:
    driver: bridge

services:
  zookeeper:
      image: confluentinc/cp-zookeeper:latest
      hostname: zookeeper
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      restart:
        always
      healthcheck:
        test: [ "CMD", "nc", "-z", "localhost", "2181" ]
        interval: 10s
        timeout: 5s
        retries: 5
      networks:
        - app
  kafka:
      image: confluentinc/cp-kafka:latest
      hostname: kafka
      ports:
        - "9092:9092"
      depends_on:
        zookeeper:
          condition: service_healthy
      environment:
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://:9092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        KAFKA_KRAFT_BROKER_ID: 1
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      healthcheck:
        test: [ "CMD", "nc", "-z", "localhost", "9092" ]
        interval: 10s
        timeout: 10s
        retries: 50
      restart:
        always
      networks:
        - app
  pg_database:
    image: postgres
    container_name: pg_database
    restart:
      always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - app
volumes:
  postgres: